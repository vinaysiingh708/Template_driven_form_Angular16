{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ViewChild } from '@angular/core';\nexport let AppComponent = class AppComponent {\n  constructor() {\n    this.title = 'template-driven-form';\n    this.firstName = '';\n    this.lastName = '';\n    this.dob = '';\n    this.emailAddress = '';\n    this.gender = '';\n    this.country = '';\n    this.city = '';\n    this.region = '';\n    this.postal = '';\n    this.userName = '';\n    this.defaultGender = 'male';\n    this.defaultCountry = 'India';\n    this.genders = [{\n      id: 'check-male',\n      value: 'male',\n      display: 'Male'\n    }, {\n      id: 'check-female',\n      value: 'female',\n      display: 'Female'\n    }, {\n      id: 'check-other',\n      value: 'other',\n      display: 'Prefer not to say'\n    }];\n  }\n  OnFormSubmitted() {\n    console.log(this.form);\n    // console.log(this.form.controls['firstname'].value);\n    // console.log(this.form.value.lastname);\n    // console.log(this.form.value.address.country);\n    // console.log(this.form.value.address.city);\n    this.firstName = this.form.value.firstname;\n    this.lastName = this.form.value.lastname;\n    this.emailAddress = this.form.value.email;\n    this.country = this.form.value.address.country;\n    this.city = this.form.value.address.city;\n    this.region = this.form.value.address.region;\n    this.postal = this.form.value.address.postal;\n    this.userName = this.form.value.username;\n    this.dob = this.form.value.dob;\n    this.form.reset();\n    this.form.form.patchValue({\n      gender: 'male',\n      address: {\n        country: 'India'\n      }\n    });\n  }\n  GenerateUsername() {\n    let username = '';\n    if (this.form.value.firstname.length >= 3) {\n      username += this.form.value.firstname.slice(0, 3);\n    } else {\n      username += this.form.value.firstname;\n    }\n    if (this.form.value.lastname.length >= 3) {\n      username += this.form.value.lastname.slice(0, 3);\n    } else {\n      username += this.lastName;\n    }\n    let datetime = new Date(this.dob);\n    username += datetime.getFullYear();\n    username = username.toLowerCase();\n    console.log(username);\n    //this.form.controls['username'].value=username;\n    //this.form.value.username=username;\n    //console.log(username);\n    // this.form.setValue({\n    //   firstname:this.form.value.firstname,\n    //   lastname:this.form.value.lastname,\n    //   email:this.form.value.email,\n    //   phone:this.form.value.phone,\n    //   dob:this.form.value.dob,\n    //   gender :this.form.value.gender,\n    //   username:username,    \n    //     address:{\n    //       street1:this.form.value.street1,\n    //         street2:this.form.value.street2,\n    //         country :this.form.value.country,\n    //         city:this.form.value.city,\n    //         region:this.form.value.region,\n    //         postal:this.form.value.postal\n    //     }\n    // })\n    this.form.form.patchValue({\n      username: username\n      // address:{\n      //   country:'Japan'\n      // }  \n    });\n  }\n};\n\n__decorate([ViewChild('registrationForm')], AppComponent.prototype, \"form\", void 0);\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})], AppComponent);","map":{"version":3,"names":["Component","ViewChild","AppComponent","constructor","title","firstName","lastName","dob","emailAddress","gender","country","city","region","postal","userName","defaultGender","defaultCountry","genders","id","value","display","OnFormSubmitted","console","log","form","firstname","lastname","email","address","username","reset","patchValue","GenerateUsername","length","slice","datetime","Date","getFullYear","toLowerCase","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\Angular Course syllabus by Vinay\\angular-16-complete-course-main\\11-template-driven-form\\start\\src\\app\\app.component.ts"],"sourcesContent":["import { Component, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'template-driven-form';\n\n  @ViewChild('registrationForm') form : NgForm;\n\n  firstName : string ='';\n  lastName :string= '';\n  dob:string='';\n  emailAddress:string ='';\n  gender :string ='';\n  country :string ='';\n  city:string ='';\n  region:string ='';\n  postal:string ='';\n  userName:string='';\n\n  defaultGender: string = 'male';\n  defaultCountry: string = 'India';\n\n  genders = [\n    {id:'check-male',value:'male',display:'Male'},\n    {id:'check-female',value:'female',display:'Female'},\n    {id:'check-other',value:'other',display:'Prefer not to say'}\n  ]\n\n  OnFormSubmitted(){\n    console.log(this.form);\n\n    // console.log(this.form.controls['firstname'].value);\n    // console.log(this.form.value.lastname);\n    // console.log(this.form.value.address.country);\n    // console.log(this.form.value.address.city);\n\n    this.firstName=this.form.value.firstname;\n    this.lastName=this.form.value.lastname;\n    this.emailAddress=this.form.value.email;\n    this.country=this.form.value.address.country;\n    this.city=this.form.value.address.city;\n    this.region=this.form.value.address.region;\n    this.postal=this.form.value.address.postal;\n    this.userName=this.form.value.username;\n    this.dob=this.form.value.dob;\n\n\n\n    this.form.reset();\n\n    this.form.form.patchValue({\n        gender:'male',\n        address:{\n          country:'India'\n        }\n    })\n  }\n\n  GenerateUsername(){\n\n    let username='';\n\n    if(this.form.value.firstname.length >=3){\n      username += this.form.value.firstname.slice(0,3);\n    }else{\n      username += this.form.value.firstname  ;\n    }\n\n    if(this.form.value.lastname.length >=3){\n      username += this.form.value.lastname.slice(0,3);\n    }else{\n      username += this.lastName  ;\n    }\n\n    let datetime = new Date(this.dob);\n    username += datetime.getFullYear();\n\n    username=username.toLowerCase();\n    \n    console.log(username);\n\n    //this.form.controls['username'].value=username;\n    //this.form.value.username=username;\n    //console.log(username);\n\n    // this.form.setValue({\n    //   firstname:this.form.value.firstname,\n    //   lastname:this.form.value.lastname,\n    //   email:this.form.value.email,\n    //   phone:this.form.value.phone,\n    //   dob:this.form.value.dob,\n    //   gender :this.form.value.gender,\n    //   username:username,    \n    //     address:{\n    //       street1:this.form.value.street1,\n    //         street2:this.form.value.street2,\n    //         country :this.form.value.country,\n    //         city:this.form.value.city,\n    //         region:this.form.value.region,\n    //         postal:this.form.value.postal\n    //     }\n    // })\n\n    this.form.form.patchValue({\n      username:username,\n      // address:{\n      //   country:'Japan'\n      // }  \n    })\n\n  }\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}